AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  AWS

  Sample SAM Template for AWS

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 20
  Api:
    Cors:
      AllowCredentials: true
      AllowOrigin: !Sub
        - "'${Domain}'"
        - Domain: !Ref  CorsOrigin
      AllowMethods: "'OPTIONS, GET, PUT'"
      AllowHeaders: !Ref CorsAllowHeaders


Parameters:
  CognitoAuthorizerArn:
    Type: String
    Description: Reference to Cognito UserPool for the stage
  CustomDomain:
    Type: String
    Description: Custom API to connect this lambda to
  CustomDomainBasePath:
    Type: String
    Description: Base path mapping in CustomDomain
  CorsOrigin:
    Type: String
    Description: Value to use for Cors 'Allow...' header if value is set
    Default: '{{resolve:secretsmanager:DefaultCorsOrigin:SecretString}}'
  CorsAllowHeaders:
    Type: String
    Description: String of headers to allow.
    Default: '{{resolve:ssm:defaultCorsAllowHeaders:1}}'
  BareApiKey:
    Type: String
    Description: Key to access bare
    Default: '{{resolve:secretsmanager:bareApiKey:SecretString}}'
    NoEcho: true
  BareHost:
    Type: String
    Description: Address to bare
    Default: '{{resolve:ssm:bareHost:2}}'

Resources:

  NvaBareProxyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Auth:
        Authorizers:
          MyCognitoAuthorizer:
            UserPoolArn: !Ref CognitoAuthorizerArn
      EndpointConfiguration: Regional
      Models:
        AddIdentifierEventModel:
          type: object
          properties:
            feideid:
              type: string
            orcid:
              type: string
            orgunitid:
              type: string



  NvaBareFetchFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Environment:
        Variables:
          AllowOrigin: !Sub
            - "${Domain}"
            - Domain: !Ref  CorsOrigin
          BARE_HOST: !Ref BareHost
          BARE_API_KEY: !Ref BareApiKey
      Handler: no.unit.nva.bare.FetchAuthorityHandler::handleRequest
      Runtime: java8
      MemorySize: 512
      Events:
        NvaBareFetchEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Auth:
              Authorizer: MyCognitoAuthorizer
            RestApiId: !Ref NvaBareProxyApi
            Method: get
            Path: /
            RequestParameters:
              - method.request.querystring.name:
                  Required: false
              - method.request.querystring.feideid:
                  Required: false

  NvaBareAddIdentifierFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Environment:
        Variables:
          AllowOrigin: !Sub
          - "${Domain}"
          - Domain: !Ref  CorsOrigin
          BARE_HOST: !Ref BareHost
          BARE_API_KEY: !Ref BareApiKey
      Handler: no.unit.nva.bare.AddAuthorityIdentifierHandler::handleRequest
      Runtime: java8
      MemorySize: 512
      Events:
        NvaBareAddIdentifierEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Auth:
              Authorizer: MyCognitoAuthorizer
            RestApiId: !Ref NvaBareProxyApi
            Path: /{scn}
            Method: put
            RequestParameters:
              - method.request.path.scn:
                  Required: true
            RequestModel:
              Model: AddIdentifierEventModel



  NvaBareProxyBasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      BasePath: !Ref CustomDomainBasePath
      DomainName: !Ref CustomDomain
      RestApiId: !Ref NvaBareProxyApi
      Stage: !Ref NvaBareProxyApi.Stage
